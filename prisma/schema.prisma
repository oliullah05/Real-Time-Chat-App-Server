// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  profilePhoto String?
  password     String
  role         UserRole @default(user)
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  sentMessages      Message[]           @relation("sentBy")
  ConversationUsers ConversationUsers[]

  @@map("users")
}

enum UserRole {
  admin
  user
}

model Conversation {
  id                 Int                 @id @default(autoincrement())
  lastMessage        String
  isGroup            Boolean             @default(false)
  groupName          String?
  isDeleted          Boolean             @default(false)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  conversationsUsers ConversationUsers[]
  Message            Message[]

  @@map("conversations")
}

model ConversationUsers {
  userId         Int
  user           User         @relation(fields: [userId], references: [id])
  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@unique([userId, conversationId])
  @@map("conversationUsers")
}



model Message {
  id        Int      @id @default(autoincrement())
  message   String
  type      String?  @default("text")
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  sender     Int
  senderInfo User @relation(fields: [sender], references: [id], name: "sentBy")

  @@map("messages")
}
